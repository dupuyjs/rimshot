<Page
    x:Class="Rimshot.Views.HomePage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Rimshot.Views"
    xmlns:songkick="using:Songkick.Models"
    xmlns:behaviors="using:Rimshot.Behaviors"
    xmlns:models="using:Rimshot.Models"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    DataContext="{Binding Main, Source={StaticResource Locator}}">

    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Styles/Theme.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <DataTemplate x:Name="EventListViewTemplate" x:DataType="songkick:EventExt">
                <Grid Margin="0,3">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Ellipse x:Name="Thumbnail" Width="48" Height="48" Stroke="{ThemeResource ThemeGrayHighColorBrush}" StrokeThickness="0" Margin="0" Grid.Column="0">
                        <Ellipse.Fill>
                            <ImageBrush ImageSource="{x:Bind Performances[0].Artist.EventImageUrl, Mode=OneWay}" Stretch="UniformToFill" ImageFailed="OnImageFailed"/>
                        </Ellipse.Fill>
                    </Ellipse>

                    <Border Margin="12,0" Grid.Column="1" VerticalAlignment="Center" BorderThickness="0" BorderBrush="{ThemeResource ThemeGrayHighColorBrush}">
                        <StackPanel>
                            <TextBlock x:Name="DisplayName" Text="{x:Bind FullDisplayName}" Style="{ThemeResource ThemeListViewTitleStyle}"/>
                            <TextBlock x:Name="DisplayVenue" Text="{x:Bind FullDisplayVenue}" Style="{ThemeResource ThemeListViewSubTitleStyle}"/>
                        </StackPanel>
                    </Border>
                </Grid>
            </DataTemplate>

            <DataTemplate x:Name="ConcertItemTemplate" x:DataType="songkick:EventExt">
                <Grid Margin="0,3">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Rectangle x:Name="Thumbnail" Width="48" Height="48" Stroke="{ThemeResource ThemeGrayHighColorBrush}" StrokeThickness="0" Margin="0" Grid.Column="0">
                        <Rectangle.Fill>
                            <ImageBrush ImageSource="{x:Bind Performances[0].Artist.EventImageUrl, Mode=OneWay}" Stretch="UniformToFill" ImageFailed="OnImageFailed"/>
                        </Rectangle.Fill>
                    </Rectangle>

                    <Border Margin="12,0" Grid.Column="1" VerticalAlignment="Center" BorderThickness="0" BorderBrush="{ThemeResource ThemeGrayHighColorBrush}">
                        <StackPanel>
                            <TextBlock x:Name="DisplayName" Text="{x:Bind FullDisplayName}" Style="{ThemeResource ThemeListViewTitleStyle}"/>
                            <TextBlock x:Name="DisplayVenue" Text="{x:Bind FullDisplayVenue}" Style="{ThemeResource ThemeListViewSubTitleStyle}"/>
                        </StackPanel>
                    </Border>
                </Grid>
            </DataTemplate>
            
            <DataTemplate x:Name="ArtistOriginalItemTemplate" x:DataType="songkick:ArtistExt">
                <Grid Margin="6">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    
                    <Rectangle x:Name="Thumbnail"
                               Stroke="{ThemeResource ThemeGrayHighColorBrush}" 
                               StrokeThickness="0">
                        <!--<Rectangle.Fill>
                            <ImageBrush ImageSource="{x:Bind ArtistImageUrl, Mode=OneWay}" Stretch="UniformToFill" ImageFailed="OnImageFailed"/>
                        </Rectangle.Fill>-->
                    </Rectangle>
                    <Image Source="{Binding ArtistImageUrl, Mode=OneWay}" Stretch="UniformToFill"/>

                    <Border Grid.RowSpan="2" Background="Black" Opacity="0.4"/>

                    <Grid Grid.Row="1" VerticalAlignment="Center">
                        <Border Background="Black" Opacity="0.6"/>
                        <StackPanel Margin="6">
                            <TextBlock x:Name="DisplayName" Text="{x:Bind DisplayName}" Style="{ThemeResource ThemeCaptionStyle}" Foreground="White"/>
                            <!--<TextBlock x:Name="DisplayVenue" Text="{x:Bind FullDisplayVenue}" Style="{ThemeResource ThemeListViewSubTitleStyle}"/>-->
                        </StackPanel>
                    </Grid>
  
                </Grid>
            </DataTemplate>

            <DataTemplate x:Name="ArtistOnTourItemTemplate" x:DataType="songkick:ArtistExt">
                <Grid Margin="6">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <Rectangle x:Name="Thumbnail"
                               Stroke="{ThemeResource ThemeGrayHighColorBrush}" 
                               StrokeThickness="0">
                        <!--<Rectangle.Fill>
                            <ImageBrush ImageSource="{x:Bind ArtistImageUrl, Mode=OneWay}" Stretch="UniformToFill" ImageFailed="OnImageFailed"/>
                        </Rectangle.Fill>-->
                    </Rectangle>

                    <Border Grid.RowSpan="2" Background="{ThemeResource ThemePurpleHighColorBrush}" Opacity="0.4"/>

                    <Grid Grid.Row="1" VerticalAlignment="Center">
                        <Border Background="Black" Opacity="0.6"/>
                        <StackPanel Margin="6">
                            <TextBlock x:Name="DisplayName" Text="{x:Bind DisplayName}" Style="{ThemeResource ThemeCaptionStyle}" Foreground="White"/>
                            <!--<TextBlock x:Name="DisplayVenue" Text="{x:Bind FullDisplayVenue}" Style="{ThemeResource ThemeListViewSubTitleStyle}"/>-->
                        </StackPanel>
                    </Grid>

                </Grid>
            </DataTemplate>

            <DataTemplate x:Name="VenueItemTemplate" x:DataType="songkick:VenueExt">
                <Grid Margin="0,3">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Rectangle x:Name="Thumbnail" Width="48" Height="48" Stroke="{ThemeResource ThemeGrayHighColorBrush}" StrokeThickness="0" Margin="0" Grid.Column="0">
                        <!--<Rectangle.Fill>
                            <ImageBrush ImageSource="{x:Bind ArtistImageUrl, Mode=OneWay}" Stretch="UniformToFill" ImageFailed="OnImageFailed"/>
                        </Rectangle.Fill>-->
                    </Rectangle>

                    <Border Margin="12,0" Grid.Column="1" VerticalAlignment="Center" BorderThickness="0" BorderBrush="{ThemeResource ThemeGrayHighColorBrush}">
                        <StackPanel>
                            <TextBlock x:Name="DisplayName" Text="{x:Bind DisplayName}" Style="{ThemeResource ThemeListViewTitleStyle}"/>
                            <!--<TextBlock x:Name="DisplayVenue" Text="{x:Bind FullDisplayVenue}" Style="{ThemeResource ThemeListViewSubTitleStyle}"/>-->
                        </StackPanel>
                    </Border>
                </Grid>
            </DataTemplate>

            <models:HomeTemplateSelector x:Name="HomeTemplateSelector" 
                                         OriginalTemplate="{StaticResource ArtistOriginalItemTemplate}"
                                         OnTourTemplate="{StaticResource ArtistOnTourItemTemplate}"/>
        </ResourceDictionary>
    </Page.Resources>
    
    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <VisualStateManager.VisualStateGroups>
            <!--<VisualStateGroup x:Name="AdaptiveStates" CurrentStateChanged="OnStateChanged">
                <VisualState x:Name="Small">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="MasterColumn.(Width)" Value="0"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Medium">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="720" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        --><!--<Setter Target="ArtistsGridView.(Background)" Value="Green"/>-->
                        <!--<Setter Target="ArtistsGridView.(behaviors:ColumnsBehavior.FixedColumns)" Value="4"/>--><!--
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Wide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="1024" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        --><!--<Setter Target="ArtistsGridView.(Background)" Value="Red"/>--><!--
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="SuperWide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="1412" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        --><!--<Setter Target="ArtistsGridView.(Background)" Value="Yellow"/>--><!--
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>-->
        </VisualStateManager.VisualStateGroups>

        <Grid.ColumnDefinitions>
            <ColumnDefinition x:Name="DetailColumn" Width="*"/>
            <ColumnDefinition x:Name="MasterColumn" Width="336"/>
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="48"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid x:Name="HeaderMasterListEvents" 
              Grid.Row="0"
              Grid.Column="1"
              Background="{ThemeResource ThemePurpleLowColorBrush}">
            <TextBlock x:Uid="Search" Text="search" Style="{ThemeResource TitleTextBlockStyle}" Foreground="White" VerticalAlignment="Bottom" Margin="12,4"/>
            <Image Source="ms-appx:///Assets/Songkick/ConcertsBy.png" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="12,12,12,4"/>
        </Grid>


        
        <ListView x:Name="MasterListEvents"
                  Grid.Row="2"
                  Grid.Column="1"
                  Background="{ThemeResource ThemeGrayLowColorBrush}"
                  ItemTemplate="{StaticResource EventListViewTemplate}"
                  SelectionChanged="OnSelectionChanged"
                  ItemsSource="{Binding Concerts}">
            <ListView.ItemContainerTransitions>
                <TransitionCollection>
                    <EntranceThemeTransition/>
                </TransitionCollection>
            </ListView.ItemContainerTransitions>
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                </Style>
            </ListView.ItemContainerStyle>
        </ListView>

        <StackPanel x:Name="SearchLayout"
              Background="{ThemeResource ThemeGrayLowColorBrush}"
              Grid.Row="1"
              Grid.Column="1">
            <!--<SymbolIcon Symbol="Find" Foreground="Black" HorizontalAlignment="Left" Margin="12,0"/>-->
            <AutoSuggestBox x:Name="QueryBox"  
                            QueryIcon="Find" 
                            Margin="10,6,10,3" 
                            Background="White"
                            PlaceholderText="search concert, artist or venue"
                            QuerySubmitted="OnQuerySubmitted"/>
            <DatePicker Margin="10,3" />
            <DatePicker Margin="10,3" />
            <AutoSuggestBox x:Name="LocationBox"  
                            QueryIcon="Map" 
                            Margin="10,3,10,6" 
                            Background="White"
                            PlaceholderText="search location"
                            QuerySubmitted="OnQuerySubmitted"/>

        </StackPanel>
        
        <Grid x:Name="HeaderSearchLayout" 
              Grid.Row="0"
              Grid.Column="0"
              Background="{ThemeResource ThemePurpleHighColorBrush}"
              d:DataContext="{Binding Concerts[1]}"
              DataContext="{x:Bind MasterListEvents.SelectedItem, Mode=OneWay}">
            <Image HorizontalAlignment="Right" Margin="12,10" Source="ms-appx:///Assets/Common/RimshotLogo-Full.png"/>
        </Grid>



        <!--<Border Grid.Row="2" Grid.Column="1" BorderThickness="1" BorderBrush="Black" Width="1200" Height="500" VerticalAlignment="Top">
            <Image Source="ms-appx:///Assets/Home/Drum.jpg" Stretch="UniformToFill" />
        </Border>-->
        <Pivot x:Name="SearchPivot" Grid.Row="1" Grid.RowSpan="2" Grid.Column="0">
            <PivotItem >
                <PivotItem.Header>
                    <Grid>
                        <TextBlock Text="artists"/>
                    </Grid>
                </PivotItem.Header>
                <GridView x:Name="ArtistsGridView" 
                          ItemsSource="{Binding Artists}" 
                          
                          ItemTemplateSelector="{StaticResource HomeTemplateSelector}"
                          behaviors:ColumnsBehavior.FixedColumns="6">
                    <GridView.ItemContainerStyle>
                        <Style TargetType="GridViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            <Setter Property="VerticalContentAlignment" Value="Stretch" />
                            <Setter Property="Margin" Value="0" />
                            <Setter Property="Padding" Value="-4" />
                        </Style>
                    </GridView.ItemContainerStyle>
                    <GridView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <!--<ItemsWrapGrid Orientation="Vertical"/>-->
                            <VariableSizedWrapGrid Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                    </GridView.ItemsPanel>
                </GridView>
            </PivotItem>
            <PivotItem x:Uid="Concerts" Header="concerts">
                <GridView x:Name="ConcertsGridView" 
                          ItemsSource="{Binding Concerts}" 
                          ItemTemplate="{StaticResource ConcertItemTemplate}" 
                          behaviors:ColumnsBehavior.FixedColumns="3">
                    <GridView.ItemContainerStyle>
                        <Style TargetType="GridViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        </Style>
                    </GridView.ItemContainerStyle>
                </GridView>
            </PivotItem>
            <PivotItem x:Uid="Venues" Header="venues">
                <GridView x:Name="VenuesGridView" 
                          ItemsSource="{Binding Venues}" 
                          ItemTemplate="{StaticResource VenueItemTemplate}" 
                          behaviors:ColumnsBehavior.FixedColumns="3">
                    <GridView.ItemContainerStyle>
                        <Style TargetType="GridViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        </Style>
                    </GridView.ItemContainerStyle>
                </GridView>
            </PivotItem>
        </Pivot>
    </Grid>
</Page>
